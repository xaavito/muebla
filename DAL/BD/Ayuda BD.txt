--------------------------------------------------------------------------------------------------------------------
--BORRADO MAGICO DE COMPROBANTES
delete from RemitoDetalle
delete from Remito
delete from NDNCDetalle
delete from HojaRutaDetalle
delete from HojaRuta
delete from OrdenCompraDetalle
delete from OrdenCompra
delete from PedidoProducto
delete from FacturaDetalle
delete from ComprobanteInterno
delete from Comprobante
---------------------------------------------------------------------------------------------------------------------
---RECOMPILA TODOS LOS SPS
-- table variable to store procedure names
DECLARE @v TABLE (RecID INT IDENTITY(1,1), spname sysname)

-- retrieve the list of stored procedures
INSERT INTO @v(spname)
    SELECT 
        '[' + s.[name] + '].[' + sp.name + ']' 
    FROM sys.procedures sp
    INNER JOIN sys.schemas s ON s.schema_id = sp.schema_id
    WHERE is_ms_shipped = 0

-- counter variables
DECLARE @cnt INT, @Tot INT
SELECT @cnt = 1
SELECT @Tot = COUNT(*) FROM @v

DECLARE @spname sysname

-- start the loop
WHILE @Cnt <= @Tot BEGIN
    SELECT @spname = spname
        FROM @v
        WHERE RecID = @Cnt

    PRINT 'refreshing...' + @spname

    BEGIN TRY
        -- refresh the stored procedure
        EXEC sp_refreshsqlmodule @spname
    END TRY
    BEGIN CATCH
        PRINT 'Validation failed for : ' + 
            @spname + ', Error:' + 
            ERROR_MESSAGE()
    END CATCH
    SET @Cnt = @cnt + 1
END
------------------------------------------------------------------------------------------------------------
select * from Componente
where id not in (select idComponente from IdiomaComponente)
----------------------------------------------------------------------------------------------

select 'INSERT INTO IdiomaComponente (idIdioma, idComponente, texto) values (1 , ' + CAST(id as varchar) + ', ''' + texto + ''')'from Componente
where id not in (select idComponente from IdiomaComponente where idIdioma = 1)

select 'INSERT INTO IdiomaComponente (idIdioma, idComponente, texto) values (2 , ' + CAST(id as varchar) + ', ''' + texto + '_ING'')'from Componente
where id not in (select idComponente from IdiomaComponente where idIdioma = 2)