'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
''
''  ProductoDAL.vb
''  Implementation of the Class ProductoDAL
''  Generated by Enterprise Architect
''  Created on:      21-jun.-2015 17:42:43
''  Original author: Javier
''  
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
''  Modification history:
''  
''
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''


Imports BE
Imports System.Drawing.Imaging
Imports System.IO
Imports System.Drawing


Public Class ProductoDAL


    ''' 
    ''' <param name="prod"></param>
    ''' <param name="cant"></param>
    Public Shared Sub actualizaCantProducto(ByVal prod As ProductoBE, ByVal cant As Integer)

    End Sub

    ''' 
    ''' <param name="producto"></param>
    Public Sub altaProducto(ByVal producto As ProductoBE)

    End Sub

    ''' 
    ''' <param name="producto"></param>
    Public Sub bajaProducto(ByVal producto As ProductoBE)

    End Sub

    ''' 
    ''' <param name="stockMin"></param>
    ''' <param name="tipo"></param>
    ''' <param name="nombre"></param>
    Public Sub buscarProductos(ByVal stockMin As Boolean, ByVal tipo As TipoProductoBE, ByVal nombre As String)

    End Sub

    ''' 
    ''' <param name="producto"></param>
    Public Shared Function checkProductoEnPedidos(ByVal producto As ProductoBE) As Boolean
        checkProductoEnPedidos = False
    End Function

    ''' 
    ''' <param name="prod"></param>
    Public Sub compararCosto(ByVal prod As ProductoBE)

    End Sub

    ''' 
    ''' <param name="prod"></param>
    Public Sub generarOrdenCompra(ByVal prod As ProductoBE)

    End Sub

    ''' 
    ''' <param name="producto"></param>
    Public Sub modificarProducto(ByVal producto As ProductoBE)

    End Sub

    Shared Function listarProductos() As List(Of ListaPrecioDetalleBE)
        Dim table As DataTable
        Dim list As New List(Of BE.ListaPrecioDetalleBE)

        Dim repository As New AccesoSQLServer
        'Try
        repository.crearComando("LISTAR_PRODUCTOS_SP")
        table = New DataTable
        table = repository.executeSearchWithAdapter()
        If (table.Rows.Count <> 1) Then
            'Throw New Excepciones.UsuarioNoEncontradoExcepcion
        End If
        For Each item As DataRow In table.Rows
            Dim producto As New BE.ProductoBE
            Dim lpd As New BE.ListaPrecioDetalleBE
            Dim lp As New BE.ListaPrecioBE
            producto.id = item.Item(0)
            producto.descripcion = item.Item(1)

            producto.image1 = (DirectCast(item.Item(2), Byte()))
            lpd.precio = item.Item(3)
            lpd.id = item.Item(4)
            lp.id = item.Item(5)
            lpd.listaPrecio = lp
            lpd.producto = producto
            list.Add(lpd)
        Next

        Return list
    End Function

    Shared Function getImagenProducto(idInt As Integer) As Byte()
        Dim table As DataTable
        Dim list As New List(Of BE.ListaPrecioDetalleBE)

        Dim repository As New AccesoSQLServer
        'Try
        repository.crearComando("GET_PRODUCTO_IMAGEN_SP")
        repository.addParam("@ID", idInt)
        table = New DataTable
        table = repository.executeSearchWithAdapter()
        If (table.Rows.Count <> 1) Then
            'Throw New Excepciones.UsuarioNoEncontradoExcepcion
        End If
        For Each item As DataRow In table.Rows
            Return (DirectCast(item.Item(0), Byte()))
        Next

    End Function


End Class ' ProductoDAL

