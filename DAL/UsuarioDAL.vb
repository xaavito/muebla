'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
''
''  UsuarioDAL.vb
''  Implementation of the Class UsuarioDAL
''  Generated by Enterprise Architect
''  Created on:      21-jun.-2015 17:42:44
''  Original author: Javier
''  
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
''  Modification history:
''  
''
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''




Imports BE


Public Class UsuarioDAL


    ''' 
    ''' <param name="usr"></param>
    Public Shared Sub altaCliente(ByVal usr As UsuarioBE)

    End Sub

    ''' 
    ''' <param name="usr"></param>
    Public Shared Sub altaUsuario(ByVal usr As UsuarioBE)

    End Sub

    ''' 
    ''' <param name="tipo"></param>
    ''' <param name="usuario"></param>
    ''' <param name="mail"></param>
    Public Shared Function buscarUsuarios(ByVal tipo As TipoUsuarioBE, ByVal usuario As String, ByVal mail As String) As List(Of UsuarioBE)
        buscarUsuarios = Nothing
    End Function

    ''' 
    ''' <param name="mail"></param>
    Public Shared Sub checkMailValido(ByVal mail As String)

    End Sub

    ''' 
    ''' <param name="usr"></param>
    Public Shared Function checkUsuarioYaRegistrado(ByVal usr As UsuarioBE) As Boolean
        checkUsuarioYaRegistrado = False
    End Function

    ''' 
    ''' <param name="usr"></param>
    Public Shared Sub eliminarUsuario(ByVal usr As UsuarioBE)

    End Sub

    ''' 
    ''' <param name="pass"></param>
    ''' <param name="usr"></param>
    Public Shared Function login(ByVal pass As String, ByVal usr As String) As UsuarioBE
        Dim table As DataTable

        Dim repository As New AccesoSQLServer
        'Try
        repository.crearComando("LOGIN_SP")
        repository.addParam("@usr", usr)
        repository.addParam("@pass", pass)
        table = New DataTable
        table = repository.executeSearchWithAdapter()
        If (table.Rows.Count <> 1) Then
            'Throw New Excepciones.UsuarioNoEncontradoExcepcion
        End If
        For Each pepe As DataRow In table.Rows
            Dim usuario As New BE.UsuarioBE
            usuario.id = pepe.Item(0)
            usuario.nombre = pepe.Item(1)
            usuario.apellido = pepe.Item(2)
            usuario.usuario = usr
            usuario.password = pass
            'usuario.activo = pepe.Item(4)
            'Dim idioma As New BE.IdiomaBE
            'idioma.identificador = pepe.Item(3)
            'usuario.idioma = idioma
            Return usuario
        Next

        'Catch ex As Exception
        'Throw New Excepciones.UsuarioNoEncontradoExcepcion
        'End Try

        Return Nothing
    End Function

    ''' 
    ''' <param name="usr"></param>
    Public Shared Sub modificarCliente(ByVal usr As UsuarioBE)

    End Sub

    ''' 
    ''' <param name="usr"></param>
    Public Shared Sub modificarUsuario(ByVal usr As UsuarioBE)

    End Sub

    ''' 
    ''' <param name="mail"></param>
    ''' <param name="usr"></param>
    Public Shared Sub solicitarContrasena(ByVal mail As String, ByVal usr As String)

    End Sub


End Class ' UsuarioDAL

